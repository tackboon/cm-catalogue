---
version: "3.8"
services:
  ################################################################
  # Postgresql database
  ################################################################
  postgres:
    image: postgres:14.4-alpine3.16
    container_name: postgres
    hostname: postgres
    ports:
      - "5433:5432"
    volumes:
      - ./docker-volume/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  ################################################################
  # Pgadmin serve UI for postgres
  ################################################################
  pgadmin:
    image: dpage/pgadmin4:6.11
    user: root
    container_name: pgadmin
    hostname: pgadmin
    ports:
      - "8081:80"
    volumes:
      - ./docker-volume/pgadmin/data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=postgres

  ################################################################
  # Tus file uploads server
  ################################################################
  tusd:
    image: tusproject/tusd:sha-e0189d1
    container_name: tusd
    hostname: tusd
    volumes:
      - ./docker-volume/tusd/data:/srv/tusd-data/data
    command: ["--hooks-grpc", "cm-tusd-hook-grpc:5000"]

  ################################################################
  # Static file server
  ################################################################
  nginx:
    image: nginx:1.23.1
    container_name: nginx
    hostname: nginx
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker-volume/nginx/logs/:/var/log/nginx
      - ./api/openapi/:/usr/share/nginx/yaml/openapi:ro

  ################################################################
  # Swagger web UI convert openapi schema to beautiful documents
  ################################################################
  swagger-ui:
    image: swaggerapi/swagger-ui:v4.13.0
    container_name: swagger-ui
    hostname: swagger-ui
    ports:
      - "8082:8080"
    environment:
      - 'URLS=[
        { url: "http://localhost:8080/openapi/user.yml", name: "User" },
        { url: "http://localhost:8080/openapi/customer.yml", name: "Customer" },
        ]'

  ################################################################
  # Web base frontend for application
  ################################################################
  cm-web:
    build:
      context: web
    container_name: cm-web
    hostname: cm-web
    ports:
      - "3000:3000"
    volumes:
      - /home/web/app/node_modules
      - ./web:/home/web/app
    env_file:
      - .env

  ################################################################
  # Application service - user (HTTP Protocol)
  ################################################################
  cm-user-http:
    build:
      context: docker/app
    container_name: cm-user-http
    hostname: cm-user-http
    volumes:
      - ./internal:/internal
      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE
    working_dir: /internal/user
    env_file:
      - .env
    environment:
      - "SERVER_TO_RUN=http"
      - "PORT=5000"

  ################################################################
  # Application service - customer (HTTP Protocol)
  ################################################################
  cm-customer-http:
    build:
      context: docker/app
    container_name: cm-customer-http
    hostname: cm-customer-http
    volumes:
      - ./internal:/internal
      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE
    working_dir: /internal/customer
    env_file:
      - .env
    environment:
      - "SERVER_TO_RUN=http"
      - "PORT=5000"
    depends_on:
      - postgres