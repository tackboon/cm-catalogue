---
version: "3.8"
services:
  ################################################################
  # Postgresql database
  ################################################################
  postgres:
    image: postgres:14.5-alpine3.16
    hostname: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - db-dump:/db-dump
    env_file:
      - .production.env
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=POSTGRES]
      restart_policy:
        condition: on-failure

  ################################################################
  # Tus file uploads server
  ################################################################
  tusd:
    image: tackboon97/tusd:sha-e0189d1
    hostname: tusd
    volumes:
      - ./docker-volume/tusd/data:/srv/tusd-data/data
    command:
      [
        "--hooks-grpc=cm-catalogue-file-grpc:5000",
        "--behind-proxy=true",
        "--base-path=/uploads/files/",
        "--expose-metrics=false",
        "--show-greeting=false",
      ]
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=TUSD]
      restart_policy:
        condition: on-failure

  ################################################################
  # Static file server
  ################################################################
  nginx:
    image: nginx:1.23.1
    hostname: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ${SSL_CERT_PATH}:${SSL_CERT_PATH}
      - ${SSL_KEY_PATH}:${SSL_KEY_PATH}
      - ./docker-volume/nginx/logs:/var/log/nginx
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=NGINX]
      restart_policy:
        condition: on-failure

  ################################################################
  # Web base frontend for application
  ################################################################
  cm-web:
    image: tackboon97/cm-catalogue-web
    hostname: cm-web
    env_file:
      - .production.env
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=WEB]
      restart_policy:
        condition: on-failure

  ################################################################
  # Application service - user (HTTP Protocol)
  ################################################################
  cm-user-http:
    image: tackboon97/cm-catalogue-user
    hostname: cm-user-http
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=USER_HTTP_API]
      restart_policy:
        condition: on-failure

  ################################################################
  # Application service - customer (HTTP Protocol)
  ################################################################
  cm-customer-http:
    image: tackboon97/cm-catalogue-customer
    hostname: cm-customer-http
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=CUSTOMER_HTTP_API]
      restart_policy:
        condition: on-failure

  ################################################################
  # Application service - catalogue (HTTP Protocol)
  ################################################################
  cm-catalogue-http:
    image: tackboon97/cm-catalogue-catalogue
    hostname: cm-catalogue-http
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=CATALOGUE_HTTP_API]
      restart_policy:
        condition: on-failure

  ################################################################
  # Application service - catalogue-file (GRPC Protocol)
  ################################################################
  cm-catalogue-file-grpc:
    image: tackboon97/cm-catalogue-catalogue-file
    hostname: cm-catalogue-file-grpc
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=CATALOGUE_FILE_GRPC_API]
      restart_policy:
        condition: on-failure

  ################################################################
  # Application service - mobile (HTTP Protocol)
  ################################################################
  cm-mobile-http:
    image: tackboon97/cm-catalogue-mobile
    hostname: cm-mobile-http
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
      - db-dump:/db-dump
      - ./docker-volume/tusd/data:/file-data
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
      - "SERVER_TO_RUN=http"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=MOBILE_HTTP_API]
      restart_policy:
        condition: on-failure

  ################################################################
  # Application service - mobile (GRPC Protocol)
  ################################################################
  cm-mobile-grpc:
    image: tackboon97/cm-catalogue-mobile
    hostname: cm-mobile-grpc
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
      - "SERVER_TO_RUN=grpc"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=MOBILE_GRPC_API]
      restart_policy:
        condition: on-failure
  
volumes:
  postgres-data:
  db-dump:
