---
version: "3.8"
services:
  ################################################################
  # Tus file uploads server
  ################################################################
  tusd:
    image: tackboon97/tusd:sha-e0189d1
    hostname: tusd
    networks:
      - nginx-network
    volumes:
      - ./docker-volume/tusd/data:/srv/tusd-data/data
    command:
      [
        "--hooks-grpc=cm-catalogue-file-grpc:5000",
        "--behind-proxy=true",
        "--base-path=/uploads/files/",
        "--expose-metrics=false",
        "--show-greeting=false",
      ]
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=TUSD]
      restart_policy:
        condition: on-failure

  ################################################################
  # Web base frontend for application
  ################################################################
  cm-web:
    image: tackboon97/cm-catalogue-web
    hostname: cm-web
    networks:
      - nginx-network
    env_file:
      - .production.env
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=WEB]
      restart_policy:
        condition: on-failure

  ################################################################
  # Application service - user (HTTP Protocol)
  ################################################################
  cm-user-http:
    image: tackboon97/cm-catalogue-user
    hostname: cm-user-http
    networks:
      - nginx-network
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=USER_HTTP_API]
      restart_policy:
        condition: on-failure

  ################################################################
  # Application service - customer (HTTP Protocol)
  ################################################################
  cm-customer-http:
    image: tackboon97/cm-catalogue-customer
    hostname: cm-customer-http
    networks:
      - nginx-network
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=CUSTOMER_HTTP_API]
      restart_policy:
        condition: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ################################################################
  # Application service - catalogue (HTTP Protocol)
  ################################################################
  cm-catalogue-http:
    image: tackboon97/cm-catalogue-catalogue
    hostname: cm-catalogue-http
    networks:
      - nginx-network
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=CATALOGUE_HTTP_API]
      restart_policy:
        condition: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ################################################################
  # Application service - catalogue-file (HTTP Protocol)
  ################################################################
  cm-catalogue-file-http:
    image: tackboon97/cm-catalogue-catalogue-file
    hostname: cm-catalogue-file-http
    networks:
      - nginx-network
    volumes:
      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE
      - ./docker-volume/tusd/data:/file-data
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
      - "SERVER_TO_RUN=http"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=CATALOGUE_FILE_HTTP_API]
      restart_policy:
        condition: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ################################################################
  # Application service - catalogue-file (GRPC Protocol)
  ################################################################
  cm-catalogue-file-grpc:
    image: tackboon97/cm-catalogue-catalogue-file
    hostname: cm-catalogue-file-grpc
    networks:
      - nginx-network
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
      - "SERVER_TO_RUN=grpc"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=CATALOGUE_FILE_GRPC_API]
      restart_policy:
        condition: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ################################################################
  # Application service - mobile (HTTP Protocol)
  ################################################################
  cm-mobile-http:
    image: tackboon97/cm-catalogue-mobile
    hostname: cm-mobile-http
    networks:
      - nginx-network
    volumes:
      - ./service-account-file.json:${SERVICE_ACCOUNT_FILE}
      - db-dump:/db-dump
      - ./docker-volume/tusd/data:/file-data
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
      - "SERVER_TO_RUN=http"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=MOBILE_HTTP_API]
      restart_policy:
        condition: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ################################################################
  # Application service - mobile (GRPC Protocol)
  ################################################################
  cm-mobile-grpc:
    image: tackboon97/cm-catalogue-mobile
    hostname: cm-mobile-grpc
    networks:
      - nginx-network
    env_file:
      - .production.env
    environment:
      - "PORT=5000"
      - "SERVER_TO_RUN=grpc"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=MOBILE_GRPC_API]
      restart_policy:
        condition: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  db-dump:
    external: true

networks:
  nginx-network:
    external: true
    